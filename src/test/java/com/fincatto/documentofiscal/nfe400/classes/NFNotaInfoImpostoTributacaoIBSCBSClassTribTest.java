package com.fincatto.documentofiscal.nfe400.classes;

import org.junit.Assert;
import org.junit.Test;

public class NFNotaInfoImpostoTributacaoIBSCBSClassTribTest {

	@Test
	public void deveRepresentarOCodigoCorretamente() {
		Assert.assertEquals("000001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000001.getCodigo());
		Assert.assertEquals("000002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000002.getCodigo());
		Assert.assertEquals("000003", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000003.getCodigo());
		Assert.assertEquals("000004", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000004.getCodigo());
		Assert.assertEquals("010001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_010001.getCodigo());
		Assert.assertEquals("010002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_010002.getCodigo());
		Assert.assertEquals("011001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011001.getCodigo());
		Assert.assertEquals("011002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011002.getCodigo());
		Assert.assertEquals("011003", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011003.getCodigo());
		Assert.assertEquals("011004", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011004.getCodigo());
		Assert.assertEquals("011005", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011005.getCodigo());
		Assert.assertEquals("200001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200001.getCodigo());
		Assert.assertEquals("200002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200002.getCodigo());
		Assert.assertEquals("200003", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200003.getCodigo());
		Assert.assertEquals("200004", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200004.getCodigo());
		Assert.assertEquals("200005", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200005.getCodigo());
		Assert.assertEquals("200006", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200006.getCodigo());
		Assert.assertEquals("200007", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200007.getCodigo());
		Assert.assertEquals("200008", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200008.getCodigo());
		Assert.assertEquals("200009", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200009.getCodigo());
		Assert.assertEquals("200010", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200010.getCodigo());
		Assert.assertEquals("200011", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200011.getCodigo());
		Assert.assertEquals("200012", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200012.getCodigo());
		Assert.assertEquals("200013", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200013.getCodigo());
		Assert.assertEquals("200014", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200014.getCodigo());
		Assert.assertEquals("200014", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200014.getCodigo());
		Assert.assertEquals("200015", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200015.getCodigo());
		Assert.assertEquals("200016", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200016.getCodigo());
		Assert.assertEquals("200017", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200017.getCodigo());
		Assert.assertEquals("200018", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200018.getCodigo());
		Assert.assertEquals("200019", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200019.getCodigo());
		Assert.assertEquals("200020", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200020.getCodigo());
		Assert.assertEquals("200021", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200021.getCodigo());
		Assert.assertEquals("200022", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200022.getCodigo());
		Assert.assertEquals("200023", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200023.getCodigo());
		Assert.assertEquals("200024", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200024.getCodigo());
		Assert.assertEquals("200025", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200025.getCodigo());
		Assert.assertEquals("200026", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200026.getCodigo());
		Assert.assertEquals("200027", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200027.getCodigo());
		Assert.assertEquals("200028", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200028.getCodigo());
		Assert.assertEquals("200029", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200029.getCodigo());
		Assert.assertEquals("200030", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200030.getCodigo());
		Assert.assertEquals("200031", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200031.getCodigo());
		Assert.assertEquals("200032", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200032.getCodigo());
		Assert.assertEquals("200033", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200033.getCodigo());
		Assert.assertEquals("200034", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200034.getCodigo());
		Assert.assertEquals("200035", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200035.getCodigo());
		Assert.assertEquals("200036", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200036.getCodigo());
		Assert.assertEquals("200037", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200037.getCodigo());
		Assert.assertEquals("200038", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200038.getCodigo());
		Assert.assertEquals("200039", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200039.getCodigo());
		Assert.assertEquals("200040", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200040.getCodigo());
		Assert.assertEquals("200041", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200041.getCodigo());
		Assert.assertEquals("200042", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200042.getCodigo());
		Assert.assertEquals("200043", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200043.getCodigo());
		Assert.assertEquals("200044", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200044.getCodigo());
		Assert.assertEquals("200045", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200045.getCodigo());
		Assert.assertEquals("200046", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200046.getCodigo());
		Assert.assertEquals("200047", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200047.getCodigo());
		Assert.assertEquals("200048", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200048.getCodigo());
		Assert.assertEquals("200049", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200049.getCodigo());
		Assert.assertEquals("200450", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200450.getCodigo());
		Assert.assertEquals("200051", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200051.getCodigo());
		Assert.assertEquals("200052", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200052.getCodigo());
		Assert.assertEquals("210001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210001.getCodigo());
		Assert.assertEquals("210002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210002.getCodigo());
		Assert.assertEquals("210003", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210003.getCodigo());
		Assert.assertEquals("210001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210001.getCodigo());
		Assert.assertEquals("210002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210002.getCodigo());
		Assert.assertEquals("210003", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210003.getCodigo());
		Assert.assertEquals("220001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_220001.getCodigo());
		Assert.assertEquals("220002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_220002.getCodigo());
		Assert.assertEquals("220003", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_220003.getCodigo());
		Assert.assertEquals("221001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_221001.getCodigo());
		Assert.assertEquals("222001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_222001.getCodigo());
		Assert.assertEquals("400001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_400001.getCodigo());
		Assert.assertEquals("410001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410001.getCodigo());
		Assert.assertEquals("410002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410002.getCodigo());
		Assert.assertEquals("410003", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410003.getCodigo());
		Assert.assertEquals("410004", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410004.getCodigo());
		Assert.assertEquals("410005", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410005.getCodigo());
		Assert.assertEquals("410006", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410006.getCodigo());
		Assert.assertEquals("410007", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410007.getCodigo());
		Assert.assertEquals("410008", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410008.getCodigo());
		Assert.assertEquals("410009", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410009.getCodigo());
		Assert.assertEquals("410010", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410010.getCodigo());
		Assert.assertEquals("410011", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410011.getCodigo());
		Assert.assertEquals("410012", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410012.getCodigo());
		Assert.assertEquals("410013", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410013.getCodigo());
		Assert.assertEquals("410014", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410014.getCodigo());
		Assert.assertEquals("410015", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410015.getCodigo());
		Assert.assertEquals("410016", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410016.getCodigo());
		Assert.assertEquals("410017", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410017.getCodigo());
		Assert.assertEquals("410018", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410018.getCodigo());
		Assert.assertEquals("410019", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410019.getCodigo());
		Assert.assertEquals("410020", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410020.getCodigo());
		Assert.assertEquals("410021", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410021.getCodigo());
		Assert.assertEquals("410999", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410999.getCodigo());
		Assert.assertEquals("510001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_510001.getCodigo());
		Assert.assertEquals("510002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_510002.getCodigo());
		Assert.assertEquals("550001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550001.getCodigo());
		Assert.assertEquals("550002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550002.getCodigo());
		Assert.assertEquals("550003", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550003.getCodigo());
		Assert.assertEquals("550004", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550004.getCodigo());
		Assert.assertEquals("550005", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550005.getCodigo());
		Assert.assertEquals("550006", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550006.getCodigo());
		Assert.assertEquals("550007", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550007.getCodigo());
		Assert.assertEquals("550008", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550008.getCodigo());
		Assert.assertEquals("550009", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550009.getCodigo());
		Assert.assertEquals("550010", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550010.getCodigo());
		Assert.assertEquals("550011", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550011.getCodigo());
		Assert.assertEquals("550012", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550012.getCodigo());
		Assert.assertEquals("550013", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550013.getCodigo());
		Assert.assertEquals("550014", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550014.getCodigo());
		Assert.assertEquals("550015", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550015.getCodigo());
		Assert.assertEquals("550016", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550016.getCodigo());
		Assert.assertEquals("550017", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550017.getCodigo());
		Assert.assertEquals("550018", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550018.getCodigo());
		Assert.assertEquals("550019", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550019.getCodigo());
		Assert.assertEquals("550020", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550020.getCodigo());
		Assert.assertEquals("620001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620001.getCodigo());
		Assert.assertEquals("620002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620002.getCodigo());
		Assert.assertEquals("620003", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620003.getCodigo());
		Assert.assertEquals("620004", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620004.getCodigo());
		Assert.assertEquals("620005", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620005.getCodigo());
		Assert.assertEquals("620006", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620006.getCodigo());
		Assert.assertEquals("800001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_800001.getCodigo());
		Assert.assertEquals("800002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_800002.getCodigo());
		Assert.assertEquals("810001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_810001.getCodigo());
		Assert.assertEquals("820001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820001.getCodigo());
		Assert.assertEquals("820002", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820002.getCodigo());
		Assert.assertEquals("820003", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820003.getCodigo());
		Assert.assertEquals("820004", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820004.getCodigo());
		Assert.assertEquals("820005", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820005.getCodigo());
		Assert.assertEquals("820006", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820006.getCodigo());
		Assert.assertEquals("830001", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_830001.getCodigo());
	}
	
    @Test
    public void deveRepresentarADescricaoCorretamente() {
    	Assert.assertEquals("Situações tributadas integralmente pelo IBS e CBS", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000001.getDescricao());
    	Assert.assertEquals("Exploração de via", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000002.getDescricao());
    	Assert.assertEquals("Regime automotivo - projetos incentivados (art. 311)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000003.getDescricao());
    	Assert.assertEquals("Regime automotivo - projetos incentivados (art. 312)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000004.getDescricao());
    	Assert.assertEquals("Operações do FGTS não realizadas pela Caixa Econômica Federal", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_010001.getDescricao());
    	Assert.assertEquals("Operações do serviço financeiro", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_010002.getDescricao());
    	Assert.assertEquals("Planos de assistência funerária", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011001.getDescricao());
    	Assert.assertEquals("Planos de assistência à saúde", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011002.getDescricao());
    	Assert.assertEquals("Intermediação de planos de assistência à saúde", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011003.getDescricao());
    	Assert.assertEquals("Concursos e prognósticos", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011004.getDescricao());
    	Assert.assertEquals("Planos de assistência à saúde de animais domésticos", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011005.getDescricao());
    	Assert.assertEquals("Aquisições realizadas entre empresas autorizadas a operar em zonas de processamento de exportação", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200001.getDescricao());
    	Assert.assertEquals("Fornecimento ou importação para produtor rural não contribuinte ou TAC", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200002.getDescricao());
    	Assert.assertEquals("Vendas de produtos destinados à alimentação humana (Anexo I)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200003.getDescricao());
    	Assert.assertEquals("Venda de dispositivos médicos com a especificação das respectivas classificações da NCM/SH previstas no Anexo XII da Lei Complementar nº 214, de 2025, observado o art. 144 da Lei Complementar nº 214, de 2025", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200004.getDescricao());
    	Assert.assertEquals("Venda de dispositivos médicos adquiridos por órgãos da administração pública (Anexo IV)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200005.getDescricao());
    	Assert.assertEquals("Situação de emergência de saúde pública reconhecida pelo Poder público (Anexo XII)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200006.getDescricao());
    	Assert.assertEquals("Fornecimento dos dispositivos de acessibilidade próprios para pessoas com deficiência (Anexo XIII)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200007.getDescricao());
    	Assert.assertEquals("Fornecimento dos dispositivos de acessibilidade próprios para pessoas com deficiência adquiridos por órgãos da administração pública (Anexo V)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200008.getDescricao());
    	Assert.assertEquals("Fornecimento de medicamentos (Anexo XIV)" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200009.getDescricao());
    	Assert.assertEquals("Fornecimento dos medicamentos registrados na Anvisa, adquiridos por órgãos da administração pública", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200010.getDescricao());
    	Assert.assertEquals("Fornecimento das composições para nutrição enteral e parenteral quando adquiridas por órgãos da administração pública (Anexo VI)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200011.getDescricao());
    	Assert.assertEquals("Situação de emergência de saúde pública reconhecida pelo Poder público (Anexo XIV)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200012.getDescricao());
    	Assert.assertEquals("Fornecimento de tampões higiênicos, absorventes higiênicos internos ou externos", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200013.getDescricao());
    	Assert.assertEquals("Fornecimento dos produtos hortícolas, frutas e ovos (Anexo XV)" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200014.getDescricao());
    	Assert.assertEquals("Venda de automóveis de passageiros de fabricação nacional adquiridos por motoristas profissionais ou pessoas com deficiência", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200015.getDescricao());
    	Assert.assertEquals("Prestação de serviços de pesquisa e desenvolvimento por Instituição Científica, Tecnológica e de Inovação (ICT)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200016.getDescricao());
    	Assert.assertEquals("Operações relacionadas ao FGTS" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200017.getDescricao());
    	Assert.assertEquals("Operações de resseguro e retrocessão", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200018.getDescricao());
    	Assert.assertEquals("Importador dos serviços financeiros contribuinte" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200019.getDescricao());
    	Assert.assertEquals("Operação praticada por sociedades cooperativas optantes por regime específico do IBS e CBS", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200020.getDescricao());
    	Assert.assertEquals("Serviços de transporte público coletivo de passageiros ferroviário e hidroviário", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200021.getDescricao());
    	Assert.assertEquals("Operação originada fora da ZFM que destine bem material industrializado a contribuinte estabelecido na ZFM", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200022.getDescricao());
    	Assert.assertEquals("Operação realizada por indústria incentivada que destine bem material intermediário para outra indústria incentivada na ZFM", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200023.getDescricao());
    	Assert.assertEquals("Operação originada fora das Áreas de Livre Comércio destinadas a contribuinte estabelecido nas Áreas de Livre Comércio", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200024.getDescricao());
    	Assert.assertEquals("Fornecimento dos serviços de educação relacionados ao Programa Universidade para Todos (Prouni)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200025.getDescricao());
    	Assert.assertEquals("Locação de imóveis localizados nas zonas reabilitadas" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200026.getDescricao());
    	Assert.assertEquals("Operações de locação, cessão onerosa e arrendamento de bens imóveis", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200027.getDescricao());
    	Assert.assertEquals("Fornecimento dos serviços de educação (Anexo II)" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200028.getDescricao());
    	Assert.assertEquals("Fornecimento dos serviços de saúde humana (Anexo III)" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200029.getDescricao());
    	Assert.assertEquals("Venda dos dispositivos médicos  (Anexo IV)" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200030.getDescricao());
    	Assert.assertEquals("Fornecimento dos dispositivos de acessibilidade próprios para pessoas com deficiência (Anexo V)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200031.getDescricao());
    	Assert.assertEquals("Fornecimento dos medicamentos registrados na Anvisa ou produzidos por farmácias de manipulação, ressalvados os medicamentos sujeitos à alíquota zero", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200032.getDescricao());
    	Assert.assertEquals("Fornecimento das composições para nutrição enteral e parenteral (Anexo VI)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200033.getDescricao());
    	Assert.assertEquals("Fornecimento dos alimentos destinados ao consumo humano (Anexo VII)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200034.getDescricao());
    	Assert.assertEquals("Fornecimento dos produtos de higiene pessoal e limpeza (Anexo VIII)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200035.getDescricao());
    	Assert.assertEquals("Fornecimento de produtos agropecuários, aquícolas, pesqueiros, florestais e extrativistas vegetais in natura", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200036.getDescricao());
    	Assert.assertEquals("Fornecimento de serviços ambientais de conservação ou recuperação da vegetação nativa" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200037.getDescricao());
    	Assert.assertEquals("Fornecimento dos insumos agropecuários e aquícolas (Anexo IX)" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200038.getDescricao());
    	Assert.assertEquals("Fornecimento dos serviços e o licenciamento ou cessão dos direitos destinados às produções nacionais artísticas (Anexo X)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200039.getDescricao());
    	Assert.assertEquals("Fornecimento de serviços de comunicação institucional à administração pública", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200040.getDescricao());
    	Assert.assertEquals("Fornecimento de serviço de educação desportiva (art. 141. I)" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200041.getDescricao());
    	Assert.assertEquals("Fornecimento de serviço de educação desportiva (art. 141. II)" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200042.getDescricao());
    	Assert.assertEquals("Fornecimento à administração pública dos serviços e dos bens relativos à soberania (Anexo XI)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200043.getDescricao());
    	Assert.assertEquals("Operações e prestações de serviços de segurança da informação e segurança cibernética desenvolvidos por sociedade que tenha sócio brasileiro (Anexo XI)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200044.getDescricao());
    	Assert.assertEquals("Operações relacionadas a projetos de reabilitação urbana de zonas históricas e de áreas críticas de recuperação e reconversão urbanística", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200045.getDescricao());
    	Assert.assertEquals("Operações com bens imóveis" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200046.getDescricao());
    	Assert.assertEquals("Bares e Restaurantes" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200047.getDescricao());
    	Assert.assertEquals("Hotelaria, Parques de Diversão e Parques Temáticos" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200048.getDescricao());
    	Assert.assertEquals("Transporte coletivo de passageiros rodoviário, ferroviário e hidroviário", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200049.getDescricao());
    	Assert.assertEquals("Serviços de transporte aéreo regional coletivo de passageiros ou de carga", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200450.getDescricao());
    	Assert.assertEquals("Agências de Turismo" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200051.getDescricao());
    	Assert.assertEquals("Prestação de serviços de profissões intelectuais" , NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200052.getDescricao());
    	Assert.assertEquals("Redutor social aplicado uma única vez na alienação de bem imóvel residencial novo", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210001.getDescricao());
    	Assert.assertEquals("Redutor social aplicado uma única vez na alienação de lote residencial", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210002.getDescricao());
    	Assert.assertEquals("Redutor social em operações de locação, cessão onerosa e arrendamento de bens imóveis de uso residencial", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210003.getDescricao());
    	Assert.assertEquals("Incorporação imobiliária submetida ao regime especial de tributação", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_220001.getDescricao());
    	Assert.assertEquals("Incorporação imobiliária submetida ao regime especial de tributação", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_220002.getDescricao());
    	Assert.assertEquals("Alienação de imóvel decorrente de parcelamento do solo", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_220003.getDescricao());
    	Assert.assertEquals("Locação, cessão onerosa ou arrendamento de bem imóvel com alíquota sobre a receita bruta", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_221001.getDescricao());
    	Assert.assertEquals("Transporte internacional de passageiros, caso os trechos de ida e volta sejam vendidos em conjunto", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_222001.getDescricao());
    	Assert.assertEquals("Fornecimento de serviços de transporte público coletivo de passageiros rodoviário e metroviário", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_400001.getDescricao());
    	Assert.assertEquals("Fornecimento de bonificações quando constem no documento fiscal e que não dependam de evento posterior", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410001.getDescricao());
    	Assert.assertEquals("Transferências entre estabelecimentos pertencentes ao mesmo contribuinte", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410002.getDescricao());
    	Assert.assertEquals("Doações sem contraprestação em benefício do doador", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410003.getDescricao());
    	Assert.assertEquals("Exportações de bens e serviços", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410004.getDescricao());
    	Assert.assertEquals("Fornecimentos realizados pela União, pelos Estados, pelo Distrito Federal e pelos Municípios", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410005.getDescricao());
    	Assert.assertEquals("Fornecimentos realizados por entidades religiosas e templos de qualquer culto", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410006.getDescricao());
    	Assert.assertEquals("Fornecimentos realizados por partidos políticos", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410007.getDescricao());
    	Assert.assertEquals("Fornecimentos de livros, jornais, periódicos e do papel destinado a sua impressão", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410008.getDescricao());
    	Assert.assertEquals("Fornecimentos de fonogramas e videofonogramas musicais produzidos no Brasil", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410009.getDescricao());
    	Assert.assertEquals("Fornecimentos de serviço de comunicação nas modalidades de radiodifusão sonora e de sons e imagens de recepção livre e gratuita", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410010.getDescricao());
    	Assert.assertEquals("Fornecimentos de ouro, quando definido em lei como ativo financeiro ou instrumento cambial", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410011.getDescricao());
    	Assert.assertEquals("Fornecimento de condomínio edilício não optante pelo regime regular", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410012.getDescricao());
    	Assert.assertEquals("Exportações de combustíveis", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410013.getDescricao());
    	Assert.assertEquals("Fornecimento de produtor rural não contribuinte", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410014.getDescricao());
    	Assert.assertEquals("Fornecimento por transportador autônomo não contribuinte", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410015.getDescricao());
    	Assert.assertEquals("Fornecimento de produtor rural não contribuinte", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410016.getDescricao());
    	Assert.assertEquals("Aquisição de bem móvel com crédito presumido sob condição de revenda realizada", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410017.getDescricao());
    	Assert.assertEquals("Operações relacionadas aos fundos garantidores e executores de políticas públicas", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410018.getDescricao());
    	Assert.assertEquals("Exclusão da gorjeta na base de cálculo no fornecimento de alimentação", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410019.getDescricao());
    	Assert.assertEquals("Exclusão do valor de intermediação na base de cálculo no fornecimento de alimentação", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410020.getDescricao());
    	Assert.assertEquals("Contribuição de que trata o art. 149-A da Constituição Federal", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410021.getDescricao());
    	Assert.assertEquals("Operações não onerosas sem previsão de tributação, não especificadas anteriormente", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410999.getDescricao());
    	Assert.assertEquals("Operações, sujeitas a diferimento, com energia elétrica, relativas à geração, comercialização, distribuição e transmissão", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_510001.getDescricao());
    	Assert.assertEquals("Operações, sujeitas a diferimento, com insumos agropecuários e aquícolas destinados a produtor rural contribuinte (Anexo IX)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_510002.getDescricao());
    	Assert.assertEquals("Exportações de bens materiais", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550001.getDescricao());
    	Assert.assertEquals("Regime de Trânsito", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550002.getDescricao());
    	Assert.assertEquals("Regimes de Depósito  (art. 85)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550003.getDescricao());
    	Assert.assertEquals("Regimes de Depósito (art. 87)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550004.getDescricao());
    	Assert.assertEquals("Regimes de Depósito (art. 87, Parágrafo único)", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550005.getDescricao());
    	Assert.assertEquals("Regimes de Permanência Temporária", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550006.getDescricao());
    	Assert.assertEquals("Regimes de Aperfeiçoamento", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550007.getDescricao());
    	Assert.assertEquals("GNL-Temporário", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550009.getDescricao());
    	Assert.assertEquals("Repetro-Permanente", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550010.getDescricao());
    	Assert.assertEquals("Repetro-Industrialização", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550011.getDescricao());
    	Assert.assertEquals("Repetro-Nacional", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550012.getDescricao());
    	Assert.assertEquals("Repetro-Entreposto", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550013.getDescricao());
    	Assert.assertEquals("Zona de Processamento de Exportação", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550014.getDescricao());
    	Assert.assertEquals("Regime Tributário para Incentivo à Modernização e à Ampliação da Estrutura Portuária", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550015.getDescricao());
    	Assert.assertEquals("Regime Especial de Incentivos para o Desenvolvimento da Infraestrutura", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550016.getDescricao());
    	Assert.assertEquals("Regime Tributário para Incentivo à Atividade Econômica Naval", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550017.getDescricao());
    	Assert.assertEquals("Desoneração da aquisição de bens de capital", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550018.getDescricao());
    	Assert.assertEquals("Importação de bem material por indústria incentivada para utilização na ZFM", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550019.getDescricao());
    	Assert.assertEquals("Áreas de livre com\u00e9rcio", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550020.getDescricao());
    	Assert.assertEquals("Tributação monofásica sobre combustíveis", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620001.getDescricao());
    	Assert.assertEquals("Tributação monofásica com responsabilidade pela retenção sobre combustíveis", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620002.getDescricao());
    	Assert.assertEquals("Tributação monofásica com tributos retidos por responsabilidade sobre combustíveis", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620003.getDescricao());
    	Assert.assertEquals("Tributação monofásica sobre mistura de EAC com gasolina A em percentual superior ao obrigatório", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620004.getDescricao());
    	Assert.assertEquals("Tributação monofásica sobre mistura de EAC com gasolina A em percentual inferior ao obrigatório", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620005.getDescricao());
    	Assert.assertEquals("Tributação monofásica sobre combustíveis cobrada anteriormente", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620006.getDescricao());
    	Assert.assertEquals("Fusão, cisão ou incorporação", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_800001.getDescricao());
    	Assert.assertEquals("Transferência de crédito do associado, inclusive as cooperativas singulares", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_800002.getDescricao());
    	Assert.assertEquals("Crédito presumido sobre o valor apurado nos fornecimentos a partir da ZFM", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_810001.getDescricao());
    	Assert.assertEquals("Documento com informações de fornecimento de serviços de planos de assistência à saúde", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820001.getDescricao());
    	Assert.assertEquals("Documento com informações de fornecimento de serviços de planos de assistência funerária", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820002.getDescricao());
    	Assert.assertEquals("Documento com informações de fornecimento de serviços de planos de assistência à saúde de animais domésticos", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820003.getDescricao());
    	Assert.assertEquals("Documento com informações de prestação de serviços de consursos de prognósticos", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820004.getDescricao());
    	Assert.assertEquals("Documento com informações de alienação de bens imóveis", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820005.getDescricao());
    	Assert.assertEquals("Documento com informações de fornecimento de serviços de exploração de via", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820006.getDescricao());
    	Assert.assertEquals("Documento com exclusão da BC da CBS e do IBS de energia elétrica fornecida pela distribuidora à UC", NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_830001.getDescricao());
    }
    
    @Test
    public void deveObterTipoApartirDoSeuCodigo() {
    	Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("000001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("000001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("000002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000003, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("000003"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_000004, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("000004"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_010001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("010001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_010002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("010002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("011001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("011002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011003, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("011003"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011004, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("011004"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_011005, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("011005"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200003, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200003"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200004, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200004"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200005, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200005"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200006, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200006"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200007, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200007"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200008, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200008"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200009, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200009"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200010, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200010"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200011, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200011"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200012, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200012"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200013, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200013"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200014, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200014"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200014, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200014"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200015, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200015"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200016, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200016"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200017, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200017"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200018, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200018"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200019, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200019"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200020, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200020"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200021, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200021"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200022, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200022"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200023, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200023"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200024, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200024"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200025, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200025"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200026, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200026"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200027, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200027"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200028, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200028"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200029, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200029"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200030, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200030"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200031, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200031"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200032, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200032"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200033, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200033"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200034, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200034"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200035, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200035"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200036, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200036"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200037, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200037"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200038, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200038"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200039, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200039"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200040, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200040"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200041, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200041"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200042, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200042"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200043, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200043"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200044, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200044"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200045, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200045"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200046, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200046"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200047, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200047"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200048, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200048"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200049, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200049"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200450, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200450"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200051, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200051"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_200052, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("200052"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("210001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("210002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210003, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("210003"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("210001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("210002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_210003, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("210003"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_220001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("220001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_220002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("220002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_220003, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("220003"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_221001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("221001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_222001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("222001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_400001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("400001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410003, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410003"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410004, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410004"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410005, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410005"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410006, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410006"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410007, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410007"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410008, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410008"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410009, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410009"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410010, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410010"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410011, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410011"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410012, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410012"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410013, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410013"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410014, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410014"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410015, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410015"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410016, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410016"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410017, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410017"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410018, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410018"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410019, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410019"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410020, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410020"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410021, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410021"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_410999, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("410999"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_510001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("510001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_510002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("510002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550003, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550003"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550004, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550004"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550005, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550005"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550006, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550006"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550007, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550007"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550008, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550008"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550009, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550009"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550010, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550010"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550011, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550011"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550012, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550012"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550013, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550013"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550014, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550014"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550015, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550015"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550016, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550016"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550017, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550017"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550018, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550018"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550019, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550019"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_550020, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("550020"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("620001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("620002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620003, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("620003"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620004, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("620004"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620005, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("620005"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_620006, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("620006"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_800001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("800001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_800002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("800002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_810001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("810001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("820001"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820002, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("820002"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820003, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("820003"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820004, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("820004"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820005, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("820005"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_820006, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("820006"));
		Assert.assertEquals(NFNotaInfoImpostoTributacaoIBSCBSClassTrib.CST_830001, NFNotaInfoImpostoTributacaoIBSCBSClassTrib.valueOfCodigo("830001"));
    }
}
